[
  {
    "title": "Firstname / lastname validation",
    "description": "Check if the text is a valid firstname or lastname. It allows Characters ,'- and space only",
    "pattern": "/(-?([A-Z].\\s)?([A-Z][a-z]+)\\s?)+([A-Z]'([A-Z][a-z]+))?/g",
    "placeholder": "Amon Bower",
    "tags": "name,lastname,firstname,characters,validate,strings",
    "priority": 3
  },
  {
    "title": "Periodic table elements",
    "pattern": "/\\b(?:A[cglmr-u]|B[aehikr]?|C[adefl-orsu]?|D[bsy]|E[rsu]|F[elmr]?|G[ade]|H[efgos]?|I[nr]?|Kr?|L[airuv]|M[dgont]|N[abdeiop]?|Os?|P[abdmortu]?|R[abe-hnu]|S[bcegimnr]?|T[abcehilm]|U(?:u[opst])?|V|W|Xe|Yb?|Z[nr])\\b/g",
    "placeholder": "Au",
    "description": "Matches periodic table elements",
    "tags": "elements,chem,strings",
    "priority": 0
  },
  {
    "title": "Unix directory (file) path",
    "description": "It takes the path to the file or directory. Works only with Unix-like paths",
    "pattern": "([^ !$`&*()+]|(\\[ !$`&*()+]))+",
    "placeholder": "/usr/lib/libgccpp.so",
    "tags": "unix,path,directory,other,strings",
    "priority": 1
  },
  {
    "title": "File extension",
    "description": "Checking the file extension. Accepted: file.c, image.jpeg. Allowed filename in which the extension has only letters [a-z].",
    "pattern": "(\\.)[a-z]{1,4}$",
    "placeholder": "myarchive.zip",
    "tags": "extension,filename,other,strings",
    "priority": 1
  },
  {
    "title": "HTML tags",
    "description": "Match content between opening and closing HTML tags",
    "pattern": "/(<script(\\s|\\S)*?</script>)|(<style(\\s|\\S)*?</style>)|(<!--(\\s|\\S)*?-->)|(</?(\\s|\\S)*?>)/g",
    "placeholder": "<span>my text</span>",
    "tags": "html,tags,closing,opening,html tag,other",
    "priority": 0
  },
  {
    "title": "Time in 24-hour format",
    "description": "Time in 24-hour format. Example: 23:50:00 / 14:00",
    "pattern": "/([01]?[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?/g",
    "placeholder": "23:00",
    "tags": "times,24 hour,format,time,numbers,date-time",
    "priority": 3
  },
  {
    "title": "Date and time in ISO-8601 format",
    "description": "Will match a valid date and times in the ISO-8601 format, excludes durations.",
    "pattern": "^(?![+-]?\\d{4,5}-?(?:\\d{2}|W\\d{2})T)(?:|(\\d{4}|[+-]\\d{5})-?(?:|(0\\d|1[0-2])(?:|-?([0-2]\\d|3[0-1]))|([0-2]\\d{2}|3[0-5]\\d|36[0-6])|W([0-4]\\d|5[0-3])(?:|-?([1-7])))(?:(?!\\d)|T(?=\\d)))(?:|([01]\\d|2[0-4])(?:|:?([0-5]\\d)(?:|:?([0-5]\\d)(?:|\\.(\\d{3})))(?:|[zZ]|([+-](?:[01]\\d|2[0-4]))(?:|:?([0-5]\\d)))))$",
    "placeholder": "2005-08-09",
    "tags": "iso-8601,format,date,time,times,durations,date-time",
    "priority": 2
  },
  {
    "title": "Date in format dd/mm/yyyy",
    "description": "Will match dates with dashes, slashes or with spaces (e.g. dd-mm-yyyy dd/mm/yyyy dd mm yyyy), and optional time separated by a space or a dash (e.g. dd-mm-yyyy-hh:mm:ss or dd/mm/yyyy hh:mm:ss).",
    "pattern": "^(0?[1-9]|[12][0-9]|3[01])([ \\/\\-])(0?[1-9]|1[012])\\2([0-9][0-9][0-9][0-9])(([ -])([0-1]?[0-9]|2[0-3]):[0-5]?[0-9]:[0-5]?[0-9])?$",
    "placeholder": "01/01/1990",
    "tags": "time,format,dd/mm/yyyy,dd,mm,yy,date-time",
    "priority": 3
  },
  {
    "title": "Date in format m/d/yyyy or mm/dd/yyyy",
    "description": "Will match date in format m/d/yyyy or mm/dd/yyyy.",
    "pattern": "^(0?[1-9]|1[0-2])[/](0?[1-9]|[12]\\d|3[01])[/](19|20)\\d{2}$",
    "placeholder": "01/31/2017",
    "tags": "time,format,m/d/yyyy,mm/dd/yyyy,date-time",
    "priority": 3
  },
  {
    "title": "Hashtags",
    "pattern": "/\\B#([a-z0-9]{2,})(?![~!@#$%^&*()=+_`\\-\\|/'\\[\\]\\{\\}]|[?.,]*\\w)/ig",
    "placeholder": "#wtf",
    "description":"Matches hashtags",
    "tags": "hashtags,strings,other,strings",
    "priority": 2
  },
  {
    "title": "24 or 32-bit Color",
    "description": "24 or 32 bit colors. Example: #FF006C / 0xF0F73611 / 99AAB7FF",
    "pattern": "(?:#|0x)?(?:[0-9A-Fa-f]{2}){3,4}",
    "placeholder": "rgb(255, 255, 255)",
    "tags": "color,hex,rgb,hex color,other",
    "priority": 2
  },
  {
    "title": "RGB Value",
    "description": "RGB color strings. Example: rgb(255,255,255)",
    "pattern": "/rgb\\((?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]))\\)/g",
    "placeholder": "#ffffff",
    "tags": "color,rgb,strings,other",
    "priority": 2
  },
  {
    "title": "2-5 letters palindromes",
    "pattern": "\\b(\\w)?(\\w)\\w?\\2\\1",
    "placeholder": "noon",
    "description": "Palindromes of 2-5 letters. Example: noon / dad",
    "tags": "palindromes,other,strings",
    "priority": 0
  },
  {
    "title": "SRC of image tag",
    "pattern": "^<\\s*img[^>]+src\\s*=\\s*([\"'])(.*?)\\1[^>]*>$",
    "placeholder": "<img src=\"cat.jpg\">",
    "description": "Match the src attribute of an HTML image tag",
    "tags": "html,image,img,html tag,src,attribute,other",
    "priority": 0
  },
  {
    "title": "Float value",
    "pattern": "^[0-9]*.[0-9]*[1-9]+$",
    "placeholder": "1.009 or 239",
    "description": "This will match any floating point value eg 1.2, 2.009 or .987 but not match 1.00 or 239",
    "tags": "float,point,value,numbers",
    "priority": 0
  },
  {
    "title": "Windows directory (file) path",
    "description": "It takes the path to the file or directory. Works only with Windows paths (C:\\Windows\\system32\\sysconf.exe etc.)",
    "pattern": "^(([a-zA-Z]:)|(\\\\{2}\\w+)\\$?)(\\\\(\\w[\\w ]*.*))+$",
    "placeholder": "C:\\Windows\\file.txt",
    "tags": "windows,path,directory,other,strings",
    "priority": 0
  },
  {
    "title": "IPv6 Address",
    "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$",
    "placeholder": "2001:db8:a0b:12f0::1",
    "description": "Match IPv6 addresses",
    "tags": "ip,ipv6,ip adress,adress,other",
    "priority": 3
  },
  {
    "title": "Dollar amounts",
    "pattern": "\\$[0-9]+(.[0-9][0-9])?",
    "placeholder": "$100 or $99.99",
    "description": "Dollar amounts, specified with a leading $ symbol.",
    "tags": "dollar,amounts,symbol,numbers",
    "priority": 0
  },
  {
    "title": "U.S./Canadian ZIP/Postal Code",
    "pattern": "(^\\d{5}(-\\d{4})?$)|(^[A-Z]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$)",
    "placeholder": "20151",
    "description": "Matches US ZIP, ZIP+4, and Canadian Postal Codes",
    "tags": "postal code,zip code,zip,code,us,canadian,numbers",
    "priority": 0
  },
  {
    "title": "JS comment",
    "pattern": "///(?![\\S]{2,}\\.[\\w]).*|/\\*(.|\n)+?\\*//g",
    "placeholder": "//Something like this",
    "description": "Match standard JS comments (incl. multiline)",
    "tags": "js,comments,standard,other",
    "priority": 0
  },
  {
    "title": "Youtube URL",
    "pattern": "/(?:https?://)?(?:(?:(?:www\\.?)?youtube\\.com(?:/(?:(?:watch\\?.*?(v=[^&\\s]+).*)|(?:v(/.*))|(channel/.+)|(?:user/(.+))|(?:results\\?(search_query=.+))))?)|(?:youtu\\.be(/.*)?))/g",
    "placeholder": "https://youtube.com/watch?v=edYCtaNueQY",
    "description": "Match the URL of a YouTube",
    "tags": "youtube,youtube id,url",
    "priority": 2
  },
  {
    "title": "CSS comment",
    "pattern": "/(/\\*)(.|\r|\n)*?(\\*/)/g",
    "placeholder": "/* my text */",
    "description": "Match standard CSS comments (incl. multiline)",
    "tags": "css,comments,standard,other",
    "priority": 0
  },
  {
    "title": "IPv4 Address",
    "pattern": "/\\b(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))\\b/ig",
    "placeholder": "192.168.0.1",
    "description": "Match IPv4 addresses",
    "tags": "ip,ipv4,adress,ip adress,other",
    "priority": 3
  },
  {
    "title": "Username",
    "description": "A string between 3 and 16 characters, allowing alphanumeric characters and hyphens and underscores",
    "pattern": "^[a-zA-Z0-9_-]{3,16}$",
    "placeholder": "BrendanEich",
    "tags": "characters,username,user,strings",
    "priority": 5
  },
  {
    "title": "Phone number",
    "pattern": "^((\\+7|7|8)+([0-9]){10})$|\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\b",
    "placeholder": "+79991234567",
    "description": "Match phone numbers of american format. Example: +79991234567 / 444-555-1234",
    "tags": "phone,digits,phone number,numbers",
    "priority": 4
  },
  {
    "title": "Domain name",
    "pattern": "/[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?/g",
    "placeholder": "domain.com",
    "description": "Matches domain name",
    "tags": "domain,name,site,www,strings",
    "priority": 4
  },
  {
    "title": "E-Mail format",
    "pattern": "/^([A-Z|a-z|0-9](\\.|_){0,1})+[A-Z|a-z|0-9]\\@([A-Z|a-z|0-9])+((\\.){0,1}[A-Z|a-z|0-9]){2}\\.[a-z]{2,3}$/gm",
    "placeholder": "my@email.com",
    "description": "Checking mail for correctness.",
    "tags": "symbol,e-mail,mail,email",
    "priority": 6
  },
  {
    "title": "E-Mail format #2",
    "pattern": "/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/",
    "placeholder": "sigmundfreud@email.de",
    "description": "Checking mail for correctness.",
    "tags": "symbol,e-mail,mail,email",
    "priority": 5
  },
  {
    "title": "URL with optional protocol",
    "pattern": "^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
    "placeholder": "https://google.com",
    "description": "Match URL with optional protocol",
    "tags": "url,protocol,http,link,uri",
    "priority": 4
  },
  {
    "title": "Password strength",
    "pattern": "/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm",
    "placeholder": "SGhowk1E",
    "description": "Password strength. Example: SGhowk1E",
    "tags": "password,strength,pwd,strings",
    "priority": 4
  },
  {
    "title": "Positive number",
    "pattern": "^\\d+$",
    "placeholder": "Any positive number",
    "description": "Match integers or floats that are positive",
    "tags": "positive,float,number,integer,numbers",
    "priority": 3
  },
  {
    "title": "Negative number",
    "pattern": "^-\\d*\\.?\\d+$",
    "placeholder": "Any negative number",
    "description": "Match integers or floats that are negative",
    "tags": "negative,float,number,integer,numbers",
    "priority": 3
  },
  {
    "title": "Match an MD5 hash",
    "description": "This regular expression validates a string as an md5 hash.",
    "pattern": "/^[a-f0-9]{32}$/gm",
    "placeholder": "00236a2ae558018ed13b5222ef1bd977",
    "tags": "md5,hash,strings",
    "priority": 5
  },
  {
    "title": "Checking for emoji",
    "description": "Checks if the text contains emoji",
    "pattern": "/\\p{Emoji_Presentation}/gu",
    "placeholder": "Text 👌",
    "tags": "emoji,other,strings",
    "priority": 3
  }
]
